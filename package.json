{
  "name": "knowclip",
  "productName": "Knowclip",
  "version": "0.14.3-beta",
  "private": true,
  "engines": {
    "node": "^20.17.0"
  },
  "author": {
    "name": "Justin Silvestre",
    "email": "justinsilvestre@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/knowclip/knowclip.git"
  },
  "license": "AGPL-3.0-only",
  "dependencies": {
    "@electron/asar": "^3.2.0",
    "@emotion/react": "^11.11.4",
    "@emotion/styled": "^11.11.0",
    "@koa/router": "^13.1.0",
    "@mui/icons-material": "^5.15.10",
    "@mui/material": "^5.13.1",
    "@sentry/electron": "^5.11.0",
    "@sentry/react": "^8.52.0",
    "@silvestre/mkanki": "^3.6.0",
    "@silvestre/subsrt": "^1.1.1",
    "ajv": "^8.12.0",
    "better-ajv-errors": "^1.2.0",
    "better-sqlite3": "^11.3.0",
    "clipwave": "^0.2.0",
    "dexie": "^3.2.5",
    "electron-conf": "^1.2.1",
    "electron-extension-installer": "^1.2.0",
    "ffmpeg-static": "^5.1.0",
    "ffprobe-static": "^3.0.0",
    "filenamify": "^6.0.0",
    "fluent-ffmpeg": "^2.1.2",
    "fs-extra": "^11.1.1",
    "hls.js": "^1.5.16",
    "koa": "^2.15.3",
    "koa-bodyparser": "^4.4.1",
    "moment": "^2.30.1",
    "normalizr": "^3.5.0",
    "papaparse": "^5.2.0",
    "pinyin-utils": "^2.32.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-redux": "^8.0.5",
    "react-router": "^6.11.2",
    "react-router-dom": "^6.11.2",
    "react-virtualized": "^9.22.5",
    "redux": "^4.1.2",
    "redux-observable": "^2.0.0",
    "redux-persist": "^6.0.0",
    "reselect": "^5.1.0",
    "rxjs": "^7.8.1",
    "semver": "^7.5.1",
    "subtitle": "^4.1.1",
    "tempy": "^3.0.0",
    "ts-json-schema-generator": "^1.5.0",
    "uuid": "^9.0.0",
    "wanakana": "^5.1.0",
    "webdriverio": "^9.7.1",
    "xss": "^1.0.6",
    "yaml": "^2.3.4",
    "yauzl": "^3.1.3"
  },
  "main": "./out/main/main.js",
  "homepage": "./",
  "scripts": {
    "postinstall": "electron-builder install-app-deps && npm run replace-in-files-cli -- --string='import { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";' --replacement='' node_modules/**/onScroll.js",
    "start": "npm run electron-vite",
    "build:homepage": "npm run --prefix homepage build",
    "test": "npm run vitest run -- --config ./vitest.config.ts",
    "build": "npm run build-schemas && npm run electron-vite -- build --mode",
    "integration": "npm run build -- integration && npm run integration:skip-build",
    "integration:u": "npm run build -- integration && npm run integration:skip-build:u",
    "integration:win": "npm run electron-vite -- build --mode integration && npm run vitest -- run --config ./vitest-integration.config.ts --mode integration",
    "integration:debug": "VITE_INTEGRATION_DEV=1 npm run build -- integration && VITE_INTEGRATION_DEV=1 npm run integration:skip-build",
    "integration:skip-build": "npm run vitest -- run --config ./vitest-integration.config.ts --mode integration",
    "integration:skip-build:u": "npm run vitest -- run --update --config ./vitest-integration.config.ts --mode integration",
    "integration:ds": "VITE_INTEGRATION_DEV=1 npm run vitest --  run --config ./vitest-integration.config.ts --mode integration",
    "build-fixture:saved": "npm run integration:build-fixture -- savedProject",
    "build-fixture:shared": "npm run integration:build-fixture -- sharedProject && rm -rf src/test/assets/generated/sharedProject sharedProject_persistedDataSnapshot.js && echo 'removed generated files'",
    "build-fixture:subtitles": "npm run integration:build-fixture -- subtitlesProject",
    "integration:build-fixture": "npm run build -- integration && npm run vitest run -- --mode integration --config ./vitest-integration-fixtures.config.ts",
    "lint": "npm run eslint 'src/**/*.{ts,tsx,js}'",
    "electron-vite": "electron-vite",
    "vitest": "vitest",
    "lint-staged": "lint-staged",
    "eslint": "eslint",
    "prettier": "prettier",
    "format": "prettier --ignore-path ./.gitignore \"{src/**,.}/*.{js,ts,tsx}\"",
    "format:write": "npm run format -- --write",
    "tsc": "tsc",
    "build-schemas": "npm run build-schema:project && npm run build-schema:media",
    "build-schema:project": "ts-json-schema-generator --path ./src/types/Project.ts --tsconfig ./tsconfig.json --out ./src/utils/validateProjectMetadata.json --type \\ProjectMetadataJson",
    "build-schema:media": "ts-json-schema-generator --path ./src/types/Project.ts --tsconfig ./tsconfig.json --out ./src/utils/validateProjectMedia.json --type '$MediaJson'",
    "tidy": "npm run format -- --list-different && npm run lint && npm run tsc",
    "electron-builder": "electron-builder",
    "electron-builder:skip-publish": "electron-builder -p never",
    "dist": "npm run build -- production && npm run electron-builder:skip-publish",
    "dist:appveyor": "npm run electron-vite -- build --mode production && npm run electron-builder",
    "replace-in-files-cli": "replace-in-files",
    "yalc": "yalc",
    "husky": "husky"
  },
  "lint-staged": {
    "src/**/*.{ts,tsx,js}": [
      "npm run prettier -- --write --ignore-path ./.gitignore",
      "npm run eslint"
    ]
  },
  "browserslist": [
    "electron >= 32.3.0"
  ],
  "devDependencies": {
    "@types/archiver": "^6.0.2",
    "@types/better-sqlite3": "^7.6.11",
    "@types/ffprobe-static": "^2.0.3",
    "@types/fluent-ffmpeg": "^2.1.19",
    "@types/fs-extra": "^11.0.1",
    "@types/koa": "^2.15.0",
    "@types/koa__router": "^12.0.4",
    "@types/koa-bodyparser": "^4.3.12",
    "@types/node": "^20.0.0",
    "@types/papaparse": "^5.3.14",
    "@types/react": "^18.0.0",
    "@types/react-dom": "^18.0.0",
    "@types/react-redux": "^7.1.20",
    "@types/react-router-dom": "^5.3.2",
    "@types/react-virtualized": "^9.21.14",
    "@types/request": "^2.48.12",
    "@types/semver": "^7.3.2",
    "@types/subtitle": "^2.0.6",
    "@types/uuid": "^9.0.1",
    "@types/wanakana": "^4.0.3",
    "@types/yauzl": "^2.10.3",
    "@typescript-eslint/eslint-plugin": "^8.24.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.3.2",
    "electron": "^32.3.0",
    "electron-builder": "^24.9.1",
    "electron-chromedriver": "^32.3.0",
    "electron-vite": "^2.0.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^9.0.11",
    "jsdom": "^24.0.0",
    "levenary": "^1.1.1",
    "lint-staged": "^13.2.2",
    "prettier": "^2.1.2",
    "replace-in-files-cli": "^2.2.0",
    "request": "^2.88.2",
    "typescript": "^5.0.4",
    "vitest": "^2.1.1",
    "yalc": "^1.0.0-pre.53"
  },
  "build": {
    "appId": "com.electron.knowclip",
    "asar": true,
    "productName": "Knowclip",
    "npmRebuild": true,
    "copyright": "Copyright 2020 Justin Silvestre",
    "files": [
      "./build/**/*",
      "./icons/**/*",
      "./out/**/*"
    ],
    "win": {
      "target": [
        "portable"
      ],
      "icon": "./icons/icon.ico",
      "artifactName": "${productName}_${version}_${os}_${arch}.${ext}"
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "category": "Education",
      "artifactName": "${productName}_${version}_${os}.${ext}"
    },
    "mac": {
      "target": [
        "default"
      ],
      "identity": null,
      "category": "public.app-category.education",
      "icon": "./icons/icon.icns",
      "artifactName": "${productName}_${version}_${os}.${ext}"
    }
  }
}
